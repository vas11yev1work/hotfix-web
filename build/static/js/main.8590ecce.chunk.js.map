{"version":3,"sources":["panels/Home.js","panels/Place.js","panels/Checkbox.js","panels/Basket.js","panels/Order.js","panels/Orders.js","App.js","index.js","img/edit.svg","img/1.png","img/3.png","img/2.png","img/4.png","img/check-symbol.svg","img/refresh-button.svg","img/kfc.png","img/burger.png","img/mcdac.png","img/sub.png"],"names":["Home","foodAreas","order","Fragment","className","map","area","key","id","to","name","alt","src","edit","items","item","link","image","description","Object","keys","length","defaultProps","Place","onIncrementPosition","onDecrementPosition","useState","orderExist","setOrderExist","price","useMemo","foodIds","Set","foods","userOrder","values","filter","v","has","result","reduce","value","count","parseInt","accounting","formatNumber","food","composition","onClick","itemId","areaId","e","preventDefault","createOrder","Checkbox","checked","onToggle","onChange","type","Check","withRouter","match","params","faster","setFaster","time","setTime","localStorage","getItem","selfService","setSelfService","products","useEffect","self","setItem","onFocus","event","target","onBlur","Order","history","setActiveOrder","setTimeout","push","Orders","orderStatuses","setFinishedOrder","activeOrders","activeOrdersList","shopId","activeOrdersSet","forEach","data","placeId","placeName","shopName","finishedOrders","refresh","FOOD_AREAS","kfc","FourTowar","OneTowar","burger","TwoTowar","ThreeTowar","mcdac","sub","placesMap","foodsMap","App","JSON","parse","setOrderStatuses","setOrder","path","exact","nextStatuses","stringify","render","routeProps","location","pathname","updatedOrder","console","log","nextOrderStatuses","status","serialized","connect","send","ReactDOM","document","getElementById","module","exports"],"mappings":"ylBAOMA,G,OAAO,SAAC,GAAD,IAAEC,EAAF,EAAEA,UAAWC,EAAb,EAAaA,MAAb,OACT,kBAAC,IAAMC,SAAP,KACI,wBAAIC,UAAU,QACTH,EAAUI,KAAI,SAACC,GAAD,OACX,wBACIC,IAAKD,EAAKE,IAEV,yBAAKJ,UAAU,uBACX,4BAAQA,UAAU,gBACd,wBAAIA,UAAU,cACV,kBAAC,IAAD,CAAMK,GAAG,IAAIL,UAAU,cAClBE,EAAKI,OAGd,kBAAC,IAAD,CAAMD,GAAG,IAAIL,UAAU,mBACnB,yBACIA,UAAU,aACVO,IAAI,iBACJC,IAAKC,QAIjB,wBAAIT,UAAU,cACV,wBAAIA,UAAU,8BAAd,wBAWR,wBAAIA,UAAU,eACTE,EAAKQ,MAAMT,KAAI,SAAAU,GAAI,OAChB,wBACIX,UAAU,aACVG,IAAKQ,EAAKP,IAEV,kBAAC,IAAD,CACIJ,UAAU,kBACVK,GAAIM,EAAKC,MAET,yBACIL,IAAKI,EAAKL,KACVN,UAAU,cACVQ,IAAKG,EAAKE,QAEd,wBAAIb,UAAU,mBACTW,EAAKL,MAEV,uBAAGN,UAAU,mBAAmBW,EAAKG,wBAQlC,IAA9BC,OAAOC,KAAKlB,GAAOmB,QAChB,4BAAQjB,UAAU,UACd,kBAAC,IAAD,CAAMK,GAAG,UAAUL,UAAU,kBAA7B,+DAqBhBJ,EAAKsB,aAAe,CAChBrB,UAAW,IAGAD,Q,iBCrFTuB,G,MAAQ,SAAC,GAAmE,IAAlER,EAAiE,EAAjEA,KAAMb,EAA2D,EAA3DA,MAAOsB,EAAoD,EAApDA,oBAAqBC,EAA+B,EAA/BA,oBAAqBnB,EAAU,EAAVA,KAAU,EACzCoB,oBAAS,GADgC,mBACtEC,EADsE,KAC1DC,EAD0D,KAEvEC,EAAQC,mBAAQ,WAClB,IAAMC,EAAU,IAAIC,KAAKjB,EAAKkB,OAAS,IAAI5B,KAAI,SAAAU,GAAI,OAAIA,EAAKP,OAEtD0B,EAAYf,OAAOgB,OAAOjC,GAAOkC,QAAO,SAAAC,GAAM,IAClC7B,EAAO6B,EAAdtB,KAAOP,GACd,OAAOuB,EAAQO,IAAI9B,MAGE,IAArB0B,EAAUb,OACVO,GAAc,GAEdA,GAAc,GAGlB,IAAMW,EAASL,EAAUM,QAAO,SAACD,EAAQE,GAAW,IACzCC,EAAwBD,EAAxBC,MAAcb,EAAUY,EAAjB1B,KAAOc,MAErB,OAAOU,EAASI,SAASd,GAASc,SAASD,KAC5C,GAGH,OAAOE,IAAWC,aAAaN,EAAQ,EAAG,OAC3C,CAACrC,EAAOa,IAQX,OACI,yBAAKX,UAAU,SACX,4BAAQA,UAAU,iBACd,2BAAOA,UAAU,cACb,wBAAIA,UAAU,eACV,kBAAC,IAAD,CAAMK,GAAG,IAAIL,UAAU,eAClBE,EAAKI,OAGd,kBAAC,IAAD,CAAMD,GAAG,QAAQL,UAAU,oBACvB,yBACIO,IAAI,iBACJC,IAAKC,SAKrB,2BAAOT,UAAU,qBACb,yBACIA,UAAU,yBACVO,IAAI,gBACJC,IAAKG,EAAKE,QAEd,wBACIb,UAAU,0BAETW,EAAKL,MAEV,uBAAGN,UAAU,0BACRW,EAAKG,cAGd,wBAAId,UAAU,gBACTW,EAAKkB,MAAM5B,KAAK,SAAAyC,GAAI,OACjB,wBACI1C,UAAU,cACVG,IAAKuC,EAAKtC,IAEV,yBAAKJ,UAAU,4BACX,yBACIO,IAAI,YACJP,UAAU,mBACVQ,IAAKkC,EAAK7B,SAGlB,wBAAIb,UAAU,oBACT0C,EAAKpC,MAEV,uBAAGN,UAAU,2BACR0C,EAAKC,aAEV,yBAAK3C,UAAU,qBACX,0BAAMA,UAAU,4BAAhB,6BAAkD0C,EAAKjB,MAAvD,YACA,4BACIzB,UAAU,qBACV4C,QAAS,WACLvB,EAAoB,CAACjB,GAAIsC,EAAKtC,GAAIyC,OAAQlC,EAAKP,GAAI0C,OAAQ5C,EAAKE,OAHxE,KAQA,qCAAasC,EAAKtC,MAAMN,EAAQA,EAAM4C,EAAKtC,IAAIkC,MAAQ,EAAvD,QACA,4BACItC,UAAU,qBACV4C,QAAS,WACLxB,EAAoB,CAAChB,GAAIsC,EAAKtC,GAAIyC,OAAQlC,EAAKP,GAAI0C,OAAQ5C,EAAKE,OAHxE,WAYhB,4BAAQJ,UAAU,iBACd,kBAAC,IAAD,CACIK,GAAE,kBAAaH,EAAKE,GAAlB,YAAwBO,EAAKP,IAC/BJ,UAAS,sBAAiBuB,EAAa,GAAK,aAC5CqB,QAAS,SAAAG,GAAC,OApF1B,SAAqBA,GACZxB,GACDwB,EAAEC,iBAkFoBC,CAAYF,KAEzBxB,EAAU,2FAAsBE,EAAtB,KAAiC,+IAOhEN,EAAMD,aAAe,CACjBP,KAAM,GACNS,oBAAqB,aAErBC,oBAAqB,cAIVF,Q,0BClIT+B,EAAW,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SACxB,OACI,yBAAKpD,UAAU,YACX,2BACImD,QAASA,EACTE,SAAUD,EACVE,KAAK,aAET,yBACI/C,IAAI,uBACJC,IAAK+C,QAMrBL,EAAShC,aAAe,CACpBkC,SAAU,cAICF,QCwIAM,eAzJA,SAAC,GAA2D,IAAD,IAAzDC,MAAQC,OAASZ,EAAwC,EAAxCA,OAAQD,EAAgC,EAAhCA,OAAUhD,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,MAAW,EAC1CwB,oBAAS,GADiC,mBAC/DqC,EAD+D,KACvDC,EADuD,OAE9CtC,mBAAS,IAFqC,mBAE/DuC,EAF+D,KAEzDC,EAFyD,OAGhCxC,qBAAWyC,aAAaC,QAAQ,kBAAmB,GAHnB,mBAG/DC,EAH+D,KAGlDC,EAHkD,KAIhEhE,EAAOL,EAAUmC,QAAO,SAAA9B,GAAI,OAAIA,EAAKE,KAAO0C,KAAQ,GACpDnC,EAAOT,EAAKQ,MAAMsB,QAAO,SAAArB,GAAI,OAAIA,EAAKP,KAAOyC,KAAQ,GALW,EAO5CnB,mBAAQ,WAC9B,IAAMC,EAAU,IAAIC,KAAKjB,EAAKkB,OAAS,IAAI5B,KAAI,SAAAU,GAAI,OAAIA,EAAKP,OAEtD+D,EAAWpD,OAAOgB,OAAOjC,GAC1BkC,QAAO,SAACK,GAAW,IACFjC,EAAOiC,EAAd1B,KAAOP,GAEd,OAAOuB,EAAQO,IAAI9B,MAGrB+B,EAASgC,EAAS/B,QAAO,SAACD,EAAQE,GAAW,IACxCC,EAAeD,EAAfC,MAAO3B,EAAQ0B,EAAR1B,KAEd,OAAOwB,EAASI,SAAS5B,EAAKc,OAASc,SAASD,KACjD,GAEH,MAAO,CAACE,IAAWC,aAAaN,EAAQ,EAAG,KAAMgC,KAClD,CAACrE,EAAOa,IAxB2D,mBAO/Dc,EAP+D,KAOxD0C,EAPwD,KA+BtE,OALAC,qBAAU,WACN,IAAMC,EAAOJ,EAAc,OAAS,GACpCF,aAAaO,QAAQ,eAAgBD,KACtC,CAACJ,IAGA,yBAAKjE,UAAU,SACX,4BAAQA,UAAU,iBACd,2BAAOA,UAAU,cACb,wBAAIA,UAAU,eACV,kBAAC,IAAD,CAAMK,GAAG,IAAIL,UAAU,eAClBE,EAAKI,OAGd,kBAAC,IAAD,CAAMD,GAAG,QAAQL,UAAU,oBACvB,yBACIO,IAAI,iBACJC,IAAKC,SAKrB,2BAAOT,UAAU,qBACb,yBACIA,UAAU,yBACVO,IAAI,gBACJC,IAAKG,EAAKE,QAEd,wBACIb,UAAU,0BAETW,EAAKL,MAEV,uBAAGN,UAAU,0BACRW,EAAKG,cAGd,yBAAKd,UAAU,2BACX,wBAAIA,UAAU,mBACTmE,EAASlE,KAAI,gBAAEU,EAAF,EAAEA,KAAM2B,EAAR,EAAQA,MAAR,OACV,wBACItC,UAAU,iBACVG,IAAKQ,EAAKP,IAEV,yBACIJ,UAAU,sBACVO,IAAI,uBACJC,IAAKG,EAAKE,QAEd,wBACIb,UAAU,uBAETW,EAAKL,MAEV,uBACIN,UAAU,wBADd,6BAGWW,EAAKc,OAEhB,uBACIzB,UAAU,wBADd,IAGMsC,QAKlB,kBAAC,IAAD,CACItC,UAAU,wBACVK,GAAE,iBAAYyC,EAAZ,YAAsBD,IAF5B,qDAOJ,yBAAK7C,UAAU,iBACX,+DACA,yBAAKA,UAAU,sBACX,8HACA,kBAAC,EAAD,CACImD,QAASQ,EACTP,SAAU,WACFO,EACAC,GAAU,IAEVE,EAAQ,IACRF,GAAU,QAK1B,yBAAK5D,UAAU,sBACX,wFACA,2BACIsD,KAAK,OACLjB,MAAOwB,EACPU,QAAS,WACLX,GAAU,IAEdP,SAAU,SAAAmB,GACNZ,GAAU,GACVE,EAAQU,EAAMC,OAAOpC,QAEzBqC,OAAQ,WACAb,GACAD,GAAU,OAK1B,yBAAK5D,UAAU,sBACX,qEACA,kBAAC,EAAD,CAAUmD,QAASc,EAAab,SAAU,kBAAMc,GAAgBD,OAEpE,yBAAKjE,UAAU,sBACX,2EACA,kBAAC,EAAD,CAAUmD,SAAUc,EAAab,SAAU,kBAAMc,GAAgBA,QAGzE,4BAAQlE,UAAU,iBACd,kBAAC,IAAD,CAAMK,GAAE,iBAAYH,EAAKE,GAAjB,YAAuBO,EAAKP,IAAMJ,UAAU,gBAApD,oDACcyB,QCrJxBkD,EAAQ,SAAC,GAA6E,IAAD,IAA3ElB,MAAQC,OAASZ,EAA0D,EAA1DA,OAAQD,EAAkD,EAAlDA,OAAU+B,EAAwC,EAAxCA,QAAS/E,EAA+B,EAA/BA,UAAWgF,EAAoB,EAApBA,eAC7D3E,EAAOL,EAAUmC,QAAO,SAAA9B,GAAI,OAAIA,EAAKE,KAAO0C,KAAQ,GACpDnC,EAAOT,EAAKQ,MAAMsB,QAAO,SAAArB,GAAI,OAAIA,EAAKP,KAAOyC,KAAQ,GAE3D,OACI,yBAAK7C,UAAU,qBACX,4BAAQA,UAAU,iBACd,2BAAOA,UAAU,cACb,wBAAIA,UAAU,eACV,kBAAC,IAAD,CAAMK,GAAG,IAAIL,UAAU,eAClBE,EAAKI,OAGd,kBAAC,IAAD,CAAMD,GAAG,QAAQL,UAAU,oBACvB,yBACIO,IAAI,iBACJC,IAAKC,SAKrB,2BAAOT,UAAU,qBACb,yBACIA,UAAU,yBACVO,IAAI,gBACJC,IAAKG,EAAKE,QAEd,wBACIb,UAAU,0BAETW,EAAKL,MAEV,uBAAGN,UAAU,0BACRW,EAAKG,cAGd,yBAAKd,UAAU,qBACX,wBAAIA,UAAU,8BAAd,4GAGA,0BAAMA,UAAU,uBAAhB,KAGA,uBAAGA,UAAU,8BAAb,+HAGA,wBAAIA,UAAU,qBAAd,wCAIJ,4BAAQA,UAAU,iBACd,yBACIK,GAAG,UACHL,UAAU,eACV4C,QAAS,WACLiC,EAAe,CAAChC,WAEhBiC,YAAW,WACPF,EAAQG,KAAK,aACd,KARX,8DAkBhBJ,EAAMzD,aAAe,CACjB2D,eAAgB,cAILrB,kBAAWmB,G,iBC1EpBK,G,OAAS,SAAC,GAAyE,IAAxElF,EAAuE,EAAvEA,MAAOmF,EAAgE,EAAhEA,cAAepF,EAAiD,EAAjDA,UAAWqF,EAAsC,EAAtCA,iBAAkBL,EAAoB,EAApBA,eAC1DM,EAAezD,mBAAQ,WACzB,IAAM0D,EAAmBrE,OAAOC,KAAKiE,GAChCjD,QAAO,SAAAqD,GAAM,MAA8B,WAA1BJ,EAAcI,MAC/BpF,KAAI,SAAAoF,GAAM,OAAIA,KAEblD,EAAS,GACTmD,EAAkB,IAAI1D,IAAIwD,GA2BhC,OAzBAvF,EAAU0F,SAAQ,SAACrF,GACfA,EAAKQ,MAAM6E,SAAQ,SAAA5E,GACf,GAAI2E,EAAgBpD,IAAIvB,EAAKP,IAAK,CAC9B,IAAMoF,EAAO,CACTC,QAASvF,EAAKE,GACdsF,UAAWxF,EAAKI,KAChB+E,OAAQ1E,EAAKP,GACbuF,SAAUhF,EAAKL,KACfmB,MAAOd,EAAKkB,MAAMO,QAAO,SAACD,EAAQO,GAC9B,GAAIA,EAAKtC,MAAMN,EAAO,CAAC,IAAD,EACaA,EAAM4C,EAAKtC,IAA5BqB,EADI,EACXd,KAAOc,MAAQa,EADJ,EACIA,MAEtB,OAAOH,EAASI,SAASd,GAASc,SAASD,GAG/C,OAAOH,IACR,GACHvB,KAAK,UAAD,OAAYV,EAAKE,GAAjB,YAAuBO,EAAKP,KAGpC+B,EAAO4C,KAAKS,UAKjBrD,IACR,CAACrC,EAAOmF,EAAepF,IAEpB+F,EAAiBlE,mBAAQ,WAC3B,IAAM0D,EAAmBrE,OAAOC,KAAKiE,GAChCjD,QAAO,SAAAqD,GAAM,MAA8B,WAA1BJ,EAAcI,MAC/BpF,KAAI,SAAAoF,GAAM,OAAIA,KAEblD,EAAS,GACTmD,EAAkB,IAAI1D,IAAIwD,GA0BhC,OAxBAvF,EAAU0F,SAAQ,SAACrF,GACfA,EAAKQ,MAAM6E,SAAQ,SAAA5E,GACf,GAAI2E,EAAgBpD,IAAIvB,EAAKP,IAAK,CAC9B,IAAMoF,EAAO,CACTE,UAAWxF,EAAKI,KAChBqF,SAAUhF,EAAKL,KACf+E,OAAQ1E,EAAKP,GACbqB,MAAOd,EAAKkB,MAAMO,QAAO,SAACD,EAAQO,GAC9B,GAAIA,EAAKtC,MAAMN,EAAO,CAAC,IAAD,EACaA,EAAM4C,EAAKtC,IAA5BqB,EADI,EACXd,KAAOc,MAAQa,EADJ,EACIA,MAEtB,OAAOH,EAASI,SAASd,GAASc,SAASD,GAG/C,OAAOH,IACR,GACHvB,KAAK,UAAD,OAAYV,EAAKE,GAAjB,YAAuBO,EAAKP,KAGpC+B,EAAO4C,KAAKS,UAKjBrD,IACR,CAACrC,EAAOmF,EAAepF,IAE1B,OACI,yBAAKG,UAAU,UACX,wBAAIA,UAAU,yBACTmF,EAAalF,KAAI,SAAAH,GAAK,OACnB,wBACIE,UAAU,uBACVG,IAAKL,EAAMc,MAEX,yBAAKZ,UAAU,gBACX,wBAAIA,UAAU,kBAAkBF,EAAM4F,WACtC,uBAAG1F,UAAU,qBAAqBF,EAAM6F,UACxC,uBAAG3F,UAAU,iBAAb,kCAAoCF,EAAM2B,MAA1C,wDAEJ,yBAAKzB,UAAU,gBAAf,eAGA,kBAAC,IAAD,CACIA,UAAU,iBACVK,GAAE,iBAAYP,EAAM2F,QAAlB,YAA6B3F,EAAMuF,SAFzC,sBAMA,4BACIrF,UAAU,iBACV4C,QAAS,WACLsC,EAAiB,CAACrC,OAAQ/C,EAAMuF,WAHxC,4BAWZ,wBAAIrF,UAAU,2BACT4F,EAAe3F,KAAI,SAAAH,GAAK,OACrB,wBACIE,UAAU,yBACVG,IAAKL,EAAMc,MAEX,yBAAKZ,UAAU,gBACX,wBAAIA,UAAU,+BAA+BF,EAAM4F,WACnD,uBAAG1F,UAAU,kCAAkCF,EAAM6F,UACrD,uBAAG3F,UAAU,8BAAb,kCAAiDF,EAAM2B,MAAvD,wDAEJ,4BACIzB,UAAU,iBACV4C,QAAS,WACLiC,EAAe,CAAChC,OAAQ/C,EAAMuF,WAGlC,yBACIrF,UAAU,kBACVO,IAAI,eACJC,IAAKqF,eAUrCb,EAAO9D,aAAe,CAClBgE,iBAAkB,aAElBL,eAAgB,cAILG,Q,iJCjITc,EAAa,CAAC,CAChB1F,GAAI,mBACJE,KAAM,qFACNI,MAAO,CAAC,CACJN,GAAI,MACJE,KAAM,MACNM,KAAM,8BACNE,YAAa,oLACbD,MAAOkF,IACPlE,MAAO,CAAC,CACJzB,GAAI,UACJS,MAAOmF,IACP1F,KAAM,6CACNmB,MAAO,KACR,CACCrB,GAAI,OACJS,MAAOoF,IACP3F,KAAM,4EACNmB,MAAO,MAEZ,CACCrB,GAAI,cACJE,KAAM,cACNM,KAAM,sCACNE,YAAa,oLACbD,MAAOqF,IACPrE,MAAO,CAAC,CACJzB,GAAI,WACJE,KAAM,0CACNqC,YAAa,oFACblB,MAAO,IACPZ,MAAOoF,KACR,CACC7F,GAAI,WACJE,KAAM,0CACNqC,YAAa,oFACblB,MAAO,IACPZ,MAAOsF,KACR,CACC/F,GAAI,aACJE,KAAM,0CACNqC,YAAa,oFACblB,MAAO,IACPZ,MAAOuF,KACR,CACChG,GAAI,cACJE,KAAM,0CACNqC,YAAa,mFACblB,MAAO,IACPZ,MAAOmF,OAEZ,CACC5F,GAAI,SACJE,KAAM,YACNM,KAAM,iCACNE,YAAa,oLACbD,MAAOwF,IACPxE,MAAO,CAAC,CACJzB,GAAI,YACJS,MAAOsF,IACP7F,KAAM,yDACNmB,MAAO,IACR,CACCrB,GAAI,SACJS,MAAOuF,IACP9F,KAAM,wCACNmB,MAAO,OAEZ,CACCrB,GAAI,SACJE,KAAM,SACNM,KAAM,iCACNC,MAAOyF,IACPxF,YAAa,oLACbe,MAAO,CAAC,CACJzB,GAAI,WACJS,MAAOuF,IACP9F,KAAM,gEACNmB,MAAO,KACR,CACCrB,GAAI,UACJS,MAAOoF,IACP3F,KAAM,wCACNmB,MAAO,UAKb8E,EAAYT,EAAW1D,QAAO,SAACD,EAAQjC,GAKzC,OAJAA,EAAKQ,MAAM6E,SAAQ,SAAA5E,GACfwB,EAAOxB,EAAKC,MAAQD,KAGjBwB,IACR,IAEGqE,EAAWV,EAAW1D,QAAO,SAACD,EAAQjC,GAOxC,OANAA,EAAKQ,MAAM6E,SAAQ,SAAA5E,GACfA,EAAKkB,MAAM0D,SAAQ,SAAA7C,GACfP,EAAOO,EAAKtC,IAAMsC,QAInBP,IACR,IAmJYsE,EAjJH,WAAO,IAAD,EAC4BnF,mBAASoF,KAAKC,MAAO5C,aAAaC,QAAQ,kBAAoB,SAAY,IADtG,mBACPiB,EADO,KACQ2B,EADR,OAEYtF,mBAASoF,KAAKC,MAAO5C,aAAaC,QAAQ,WAAa,SAAY,IAF/E,mBAEPlE,EAFO,KAEA+G,EAFA,KAId,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,GACjB,kBAAC,EAAD,CAAMlH,UAAWiG,EAAYhG,MAAOA,KAExC,kBAAC,IAAD,CAAOgH,KAAK,yBAAyBC,OAAK,GACtC,kBAAC,EAAD,CACIlH,UAAWiG,EACXhG,MAAOA,EACP+E,eAAgB,YAAe,IAAbhC,EAAY,EAAZA,OACRmE,EAAY,eAAO/B,GAEzB+B,EAAanE,GAAU,SAEvB+D,EAAiBI,GACjBjD,aAAaO,QAAQ,gBAAiBoC,KAAKO,UAAUD,QAIjE,kBAAC,IAAD,CAAOF,KAAK,0BAA0BC,OAAK,GACvC,kBAAC,EAAD,CACIlH,UAAWiG,EACXhG,MAAOA,KAGf,kBAAC,IAAD,CACIgH,KAAK,UACLC,OAAK,GAEL,kBAAC,EAAD,CACIjH,MAAOA,EACPmF,cAAeA,EACfpF,UAAWiG,EACXZ,iBAAkB,YAAe,IAAbrC,EAAY,EAAZA,OACVmE,EAAY,eAAO/B,GAEzB+B,EAAanE,GAAU,WAEvB+D,EAAiBI,GACjBjD,aAAaO,QAAQ,gBAAiBoC,KAAKO,UAAUD,KAEzDnC,eAAgB,YAAe,IAAbhC,EAAY,EAAZA,OACRmE,EAAY,eAAO/B,GAEzB+B,EAAanE,GAAU,SAEvB+D,EAAiBI,GACjBjD,aAAaO,QAAQ,gBAAiBoC,KAAKO,UAAUD,QAIjE,kBAAC,IAAD,CACIF,KAAK,sBACLI,OAAQ,SAAAC,GACJ,OACI,kBAAC,EAAD,iBACQA,EADR,CAEIxG,KAAM4F,EAAUY,EAAWC,SAASC,UACpCnH,KAAM4F,EAAW,GACjBhG,MAAOA,EACPsB,oBAAqB,YAA2B,IAAzBhB,EAAwB,EAAxBA,GAAIyC,EAAoB,EAApBA,OACjByE,GADqC,EAAZxE,OACb,eAAOhD,IACzByH,QAAQC,IAAIF,GACRlH,KAAMkH,EACNA,EAAalH,GAAIkC,QAEjBgF,EAAalH,GAAM,CACfO,KAAM6F,EAASpG,GACfkC,MAAO,GAIf,IAAImF,EAAiB,eAAOxC,GAEkB,IAA1ClE,OAAOC,KAAKyG,GAAmBxG,QAC/B6E,EAAWP,SAAQ,SAAArF,GACfA,EAAKQ,MAAM6E,SAAQ,SAAA5E,GACfA,EAAKkB,MAAM0D,SAAQ,SAAA7C,GACf,GAAIA,EAAKtC,MAAMN,EAAO,CAClB,IAAM4H,EAAS/G,EAAKP,KAAOyC,EAAS,SAAW,OAE/C4E,EAAkB9G,EAAKP,IAAMsH,YAOjD,IAAMC,EAAajB,KAAKO,UAAUK,GAElCvD,aAAaO,QAAQ,SAAUqD,GAC/B5D,aAAaO,QAAQ,gBAAiBoC,KAAKO,UAAUQ,IAErDZ,EAASS,GACTV,EAAiBa,IAErBpG,oBAAqB,YAA2B,IAAzBjB,EAAwB,EAAxBA,GAAIyC,EAAoB,EAApBA,OACjByE,GADqC,EAAZxE,OACb,eAAOhD,IAErBM,KAAMkH,IACyB,IAA3BA,EAAalH,GAAIkC,aACVgF,EAAalH,GAEpBkH,EAAalH,GAAIkC,SAIzB,IAAImF,EAAiB,eAAOxC,GAEkB,IAA1ClE,OAAOC,KAAKyG,GAAmBxG,QAC/B6E,EAAWP,SAAQ,SAAArF,GACfA,EAAKQ,MAAM6E,SAAQ,SAAA5E,GACfA,EAAKkB,MAAM0D,SAAQ,SAAA7C,GACf,GAAIA,EAAKtC,MAAMN,EAAO,CAClB,IAAM4H,EAAS/G,EAAKP,KAAOyC,EAAS,SAAW,OAE/C4E,EAAkB9G,EAAKP,IAAMsH,YAOjD,IAAMC,EAAajB,KAAKO,UAAUK,GAElCvD,aAAaO,QAAQ,SAAUqD,GAC/B5D,aAAaO,QAAQ,gBAAiBoC,KAAKO,UAAUQ,IAErDZ,EAASS,GACTV,EAAiBa,aC3PrDG,IAAQC,KAAK,gBAQbC,IAASZ,OAAO,kBAAC,EAAD,MAAQa,SAASC,eAAe,U,mBCjBhDC,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,+B,mBCA3CD,EAAOC,QAAU,IAA0B,+B,wCCA3CD,EAAOC,QAAU,IAA0B,+B,mBCA3CD,EAAOC,QAAU,IAA0B,+B,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,iC","file":"static/js/main.8590ecce.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\n\nimport edit from '../img/edit.svg'\nimport './Home.css'\n\nconst Home = ({foodAreas, order}) => (\n    <React.Fragment>\n        <ul className=\"Home\">\n            {foodAreas.map((area) => (\n                <li\n                    key={area.id}\n                >\n                    <div className=\"Home__fixed-content\">\n                        <header className=\"Home__header\">\n                            <h1 className=\"Home__head\">\n                                <Link to=\"/\" className=\"Home__logo\">\n                                    {area.name}\n                                </Link>\n                            </h1>\n                            <Link to=\"/\" className=\"Home__change-tz\">\n                                <img\n                                    className=\"Home__edit\"\n                                    alt=\"change-profile\"\n                                    src={edit}\n                                />\n                            </Link>\n                        </header>\n                        <ul className=\"Home__tabs\">\n                            <li className=\"Home__tab Home__tab_active\">\n                                Еда\n                            </li>\n                            {/* <li className=\"Home__tab Home__tab_disabled\">\n                Развлечения\n              </li>\n              <li className=\"Home__tab Home__tab_disabled\">\n                Здоровье\n              </li> */}\n                        </ul>\n                    </div>\n                    <ul className=\"Home__items\">\n                        {area.items.map(item => (\n                            <li\n                                className=\"Home__item\"\n                                key={item.id}\n                            >\n                                <Link\n                                    className=\"Home__food-link\"\n                                    to={item.link}\n                                >\n                                    <img\n                                        alt={item.name}\n                                        className=\"Home__image\"\n                                        src={item.image}\n                                    />\n                                    <h3 className=\"Home__food-name\">\n                                        {item.name}\n                                    </h3>\n                                    <p className=\"Home__food-type\">{item.description}</p>\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                </li>\n            ))}\n        </ul>\n        {Object.keys(order).length !== 0 && (\n            <footer className=\"Footer\">\n                <Link to=\"/orders\" className=\"Footer__orders\">\n                    Мои заказы\n                </Link>\n            </footer>\n        )}\n    </React.Fragment>\n)\n\nHome.propTypes = {\n    foodAreas: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        items: PropTypes.arrayOf(PropTypes.shape({\n            id: PropTypes.string,\n            name: PropTypes.string,\n            description: PropTypes.string,\n            url: PropTypes.string,\n        })),\n    })),\n}\n\nHome.defaultProps = {\n    foodAreas: [],\n}\n\nexport default Home\n","import React, {useMemo, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport accounting from 'accounting'\n// import PropTypes from 'prop-types';\n\nimport edit from '../img/edit.svg'\nimport './place.css'\n\n\nconst Place = ({item, order, onIncrementPosition, onDecrementPosition, area}) => {\n    const [orderExist, setOrderExist] = useState(false)\n    const price = useMemo(() => {\n        const foodIds = new Set((item.foods || []).map(item => item.id))\n\n        const userOrder = Object.values(order).filter(v => {\n            const {item: {id}} = v\n            return foodIds.has(id)\n        })\n\n        if (userOrder.length === 0) {\n            setOrderExist(false)\n        } else {\n            setOrderExist(true)\n        }\n\n        const result = userOrder.reduce((result, value) => {\n            const {count, item: {price}} = value\n\n            return result + parseInt(price) * parseInt(count)\n        }, 0)\n\n\n        return accounting.formatNumber(result, 0, ' ')\n    }, [order, item])\n\n    function createOrder(e) {\n        if (!orderExist) {\n            e.preventDefault()\n        }\n    }\n\n    return (\n        <div className=\"Place\">\n            <header className=\"Place__header\">\n                <aside className=\"Place__trz\">\n                    <h1 className=\"Place__head\">\n                        <Link to=\"/\" className=\"Place__logo\">\n                            {area.name}\n                        </Link>\n                    </h1>\n                    <Link to=\"/edit\" className=\"Place__change-tz\">\n                        <img\n                            alt=\"change-profile\"\n                            src={edit}\n                        />\n                    </Link>\n                </aside>\n            </header>\n            <aside className=\"Place__restoraunt\">\n                <img\n                    className=\"Place__restoraunt-logo\"\n                    alt=\"Fastfood logo\"\n                    src={item.image}\n                />\n                <h2\n                    className=\"Place__restoraunt-name\"\n                >\n                    {item.name}\n                </h2>\n                <p className=\"Place__restoraunt-type\">\n                    {item.description}\n                </p>\n            </aside>\n            <ul className=\"Place__foods\">\n                {item.foods.map((food => (\n                    <li\n                        className=\"Place__food\"\n                        key={food.id}\n                    >\n                        <div className=\"Place__food-logo-wrapper\">\n                            <img\n                                alt=\"food logo\"\n                                className=\"Place__food-logo\"\n                                src={food.image}\n                            />\n                        </div>\n                        <h3 className=\"Place__food-name\">\n                            {food.name}\n                        </h3>\n                        <p className=\"Place__food-composition\">\n                            {food.composition}\n                        </p>\n                        <div className=\"Place__food-price\">\n                            <span className=\".Place__food-price-price\">Цена: {food.price}&nbsp;&nbsp;</span>\n                            <button\n                                className=\"Place__food-button\"\n                                onClick={() => {\n                                    onDecrementPosition({id: food.id, itemId: item.id, areaId: area.id})\n                                }}\n                            >\n                                -\n                            </button>\n                            <span>&nbsp;{food.id in order ? order[food.id].count : 0}&nbsp;</span>\n                            <button\n                                className=\"Place__food-button\"\n                                onClick={() => {\n                                    onIncrementPosition({id: food.id, itemId: item.id, areaId: area.id})\n                                }}\n                            >\n                                +\n                            </button>\n                        </div>\n                    </li>\n                )))}\n            </ul>\n            <footer className=\"Place__footer\">\n                <Link\n                    to={`/basket/${area.id}/${item.id}`}\n                    className={`Place__order${orderExist ? '' : ' disabled'}`}\n                    onClick={e => createOrder(e)}\n                >\n                    {orderExist ? `Оформить заказ (${price})` : 'Добавьте товары в корзину'}\n                </Link>\n            </footer>\n        </div>\n    )\n}\n\nPlace.defaultProps = {\n    item: {},\n    onIncrementPosition: () => {\n    },\n    onDecrementPosition: () => {\n    },\n}\n\nexport default Place\n","import React from 'react'\n\nimport './Checkbox.css'\nimport Check from '../img/check-symbol.svg'\n\n\nconst Checkbox = ({checked, onToggle}) => {\n    return (\n        <div className=\"Checkbox\">\n            <input\n                checked={checked}\n                onChange={onToggle}\n                type=\"checkbox\"\n            />\n            <img\n                alt=\"custom checkbox logo\"\n                src={Check}\n            />\n        </div>\n    )\n}\n\nCheckbox.defaultProps = {\n    onToggle: () => {\n    },\n}\n\nexport default Checkbox\n","import React, {useMemo, useState, useEffect} from 'react'\nimport {withRouter, Link} from 'react-router-dom'\nimport accounting from 'accounting'\n\nimport Checkbox from './Checkbox'\n\nimport edit from '../img/edit.svg'\nimport './place.css'\n\n\nconst Basket = ({match: {params: {areaId, itemId}}, foodAreas, order}) => {\n    const [faster, setFaster] = useState(true)\n    const [time, setTime] = useState('')\n    const [selfService, setSelfService] = useState(!!localStorage.getItem('self-service') || false)\n    const area = foodAreas.filter(area => area.id === areaId)[0]\n    const item = area.items.filter(item => item.id === itemId)[0]\n\n    const [price, products] = useMemo(() => {\n        const foodIds = new Set((item.foods || []).map(item => item.id))\n\n        const products = Object.values(order)\n            .filter((value) => {\n                const {item: {id}} = value\n\n                return foodIds.has(id)\n            })\n\n        const result = products.reduce((result, value) => {\n            const {count, item} = value\n\n            return result + parseInt(item.price) * parseInt(count)\n        }, 0)\n\n        return [accounting.formatNumber(result, 0, ' '), products]\n    }, [order, item])\n\n    useEffect(() => {\n        const self = selfService ? 'true' : ''\n        localStorage.setItem('self-service', self)\n    }, [selfService])\n\n    return (\n        <div className=\"Place\">\n            <header className=\"Place__header\">\n                <aside className=\"Place__trz\">\n                    <h1 className=\"Place__head\">\n                        <Link to=\"/\" className=\"Place__logo\">\n                            {area.name}\n                        </Link>\n                    </h1>\n                    <Link to=\"/edit\" className=\"Place__change-tz\">\n                        <img\n                            alt=\"change-profile\"\n                            src={edit}\n                        />\n                    </Link>\n                </aside>\n            </header>\n            <aside className=\"Place__restoraunt\">\n                <img\n                    className=\"Place__restoraunt-logo\"\n                    alt=\"Fastfood logo\"\n                    src={item.image}\n                />\n                <h2\n                    className=\"Place__restoraunt-name\"\n                >\n                    {item.name}\n                </h2>\n                <p className=\"Place__restoraunt-type\">\n                    {item.description}\n                </p>\n            </aside>\n            <div className=\"Place__products-wrapper\">\n                <ul className=\"Place__products\">\n                    {products.map(({item, count}) => (\n                        <li\n                            className=\"Place__product\"\n                            key={item.id}\n                        >\n                            <img\n                                className=\"Place__product-logo\"\n                                alt=\"Ordered product logo\"\n                                src={item.image}\n                            />\n                            <h3\n                                className=\"Place__product-name\"\n                            >\n                                {item.name}\n                            </h3>\n                            <p\n                                className=\"Place__product-price\"\n                            >\n                                Цена: {item.price}\n                            </p>\n                            <p\n                                className=\"Place__product-count\"\n                            >\n                                x{count}\n                            </p>\n                        </li>\n                    ))}\n                </ul>\n                <Link\n                    className=\"Place__change-product\"\n                    to={`/place/${areaId}/${itemId}`}\n                >\n                    Изменить\n                </Link>\n            </div>\n            <div className=\"Place__choice\">\n                <h3>Время:</h3>\n                <div className=\"Place__choice-item\">\n                    <span>Как можно быстрее</span>\n                    <Checkbox\n                        checked={faster}\n                        onToggle={() => {\n                            if (faster) {\n                                setFaster(false)\n                            } else {\n                                setTime('')\n                                setFaster(true)\n                            }\n                        }}\n                    />\n                </div>\n                <div className=\"Place__choice-item\">\n                    <span>Назначить</span>\n                    <input\n                        type=\"time\"\n                        value={time}\n                        onFocus={() => {\n                            setFaster(false)\n                        }}\n                        onChange={event => {\n                            setFaster(false)\n                            setTime(event.target.value)\n                        }}\n                        onBlur={() => {\n                            if (time) {\n                                setFaster(false)\n                            }\n                        }}\n                    />\n                </div>\n                <div className=\"Place__choice-item\">\n                    <h3>С собой</h3>\n                    <Checkbox checked={selfService} onToggle={() => setSelfService(!selfService)}/>\n                </div>\n                <div className=\"Place__choice-item\">\n                    <h3>На месте</h3>\n                    <Checkbox checked={!selfService} onToggle={() => setSelfService(!setSelfService)}/>\n                </div>\n            </div>\n            <footer className=\"Place__footer\">\n                <Link to={`/order/${area.id}/${item.id}`} className=\"Place__order\">\n                    Оплатить {price}\n                </Link>\n            </footer>\n        </div>\n    )\n}\n\nexport default withRouter(Basket)\n","import React from 'react'\nimport {Link, withRouter} from 'react-router-dom'\n\nimport edit from '../img/edit.svg'\nimport './place.css'\n\n\nconst Order = ({match: {params: {areaId, itemId}}, history, foodAreas, setActiveOrder}) => {\n    const area = foodAreas.filter(area => area.id === areaId)[0]\n    const item = area.items.filter(item => item.id === itemId)[0]\n\n    return (\n        <div className=\"Place Place_order\">\n            <header className=\"Place__header\">\n                <aside className=\"Place__trz\">\n                    <h1 className=\"Place__head\">\n                        <Link to=\"/\" className=\"Place__logo\">\n                            {area.name}\n                        </Link>\n                    </h1>\n                    <Link to=\"/edit\" className=\"Place__change-tz\">\n                        <img\n                            alt=\"change-profile\"\n                            src={edit}\n                        />\n                    </Link>\n                </aside>\n            </header>\n            <aside className=\"Place__restoraunt\">\n                <img\n                    className=\"Place__restoraunt-logo\"\n                    alt=\"Fastfood logo\"\n                    src={item.image}\n                />\n                <h2\n                    className=\"Place__restoraunt-name\"\n                >\n                    {item.name}\n                </h2>\n                <p className=\"Place__restoraunt-type\">\n                    {item.description}\n                </p>\n            </aside>\n            <div className=\"Place__order-body\">\n                <h3 className=\"Place__order-number-header\">\n                    Номер вашего заказа\n                </h3>\n                <main className=\"Place__order-number\">\n                    7\n                </main>\n                <p className=\"Place__order-number-header\">\n                    Заказ будет готов через\n                </p>\n                <h3 className=\"Place__order-time\">\n                    ~ 15 минут\n                </h3>\n            </div>\n            <footer className=\"Place__footer\">\n                <div\n                    to=\"/orders\"\n                    className=\"Place__order\"\n                    onClick={() => {\n                        setActiveOrder({itemId})\n\n                        setTimeout(() => {\n                            history.push('/orders')\n                        }, 0)\n                    }}\n                >\n                    Мои заказы\n                </div>\n            </footer>\n        </div>\n    )\n}\n\nOrder.defaultProps = {\n    setActiveOrder: () => {\n    },\n}\n\nexport default withRouter(Order)\n","import React, {useMemo} from 'react'\nimport {Link} from 'react-router-dom'\n\nimport refresh from '../img/refresh-button.svg'\nimport './orders.css'\n\n\nconst Orders = ({order, orderStatuses, foodAreas, setFinishedOrder, setActiveOrder}) => {\n    const activeOrders = useMemo(() => {\n        const activeOrdersList = Object.keys(orderStatuses)\n            .filter(shopId => orderStatuses[shopId] === 'ACTIVE')\n            .map(shopId => shopId)\n\n        const result = []\n        const activeOrdersSet = new Set(activeOrdersList)\n\n        foodAreas.forEach((area) => {\n            area.items.forEach(item => {\n                if (activeOrdersSet.has(item.id)) {\n                    const data = {\n                        placeId: area.id,\n                        placeName: area.name,\n                        shopId: item.id,\n                        shopName: item.name,\n                        price: item.foods.reduce((result, food) => {\n                            if (food.id in order) {\n                                const {item: {price}, count} = order[food.id]\n\n                                return result + parseInt(price) * parseInt(count)\n                            }\n\n                            return result\n                        }, 0),\n                        link: `/order/${area.id}/${item.id}`,\n                    }\n\n                    result.push(data)\n                }\n            })\n        })\n\n        return result\n    }, [order, orderStatuses, foodAreas])\n\n    const finishedOrders = useMemo(() => {\n        const activeOrdersList = Object.keys(orderStatuses)\n            .filter(shopId => orderStatuses[shopId] !== 'ACTIVE')\n            .map(shopId => shopId)\n\n        const result = []\n        const activeOrdersSet = new Set(activeOrdersList)\n\n        foodAreas.forEach((area) => {\n            area.items.forEach(item => {\n                if (activeOrdersSet.has(item.id)) {\n                    const data = {\n                        placeName: area.name,\n                        shopName: item.name,\n                        shopId: item.id,\n                        price: item.foods.reduce((result, food) => {\n                            if (food.id in order) {\n                                const {item: {price}, count} = order[food.id]\n\n                                return result + parseInt(price) * parseInt(count)\n                            }\n\n                            return result\n                        }, 0),\n                        link: `/order/${area.id}/${item.id}`,\n                    }\n\n                    result.push(data)\n                }\n            })\n        })\n\n        return result\n    }, [order, orderStatuses, foodAreas])\n\n    return (\n        <div className=\"Orders\">\n            <ul className=\"Orders__active-orders\">\n                {activeOrders.map(order => (\n                    <li\n                        className=\"Orders__active-order\"\n                        key={order.link}\n                    >\n                        <div className=\"Orders__left\">\n                            <h3 className=\"Orders__header\">{order.placeName}</h3>\n                            <p className=\"Orders__shop-name\">{order.shopName}</p>\n                            <p className=\"Orders__price\">Сумма {order.price} - Оплачено</p>\n                        </div>\n                        <div className=\"Orders__time\">\n                            ~ 15 М\n                        </div>\n                        <Link\n                            className=\"Orders__change\"\n                            to={`/place/${order.placeId}/${order.shopId}`}\n                        >\n                            Изм\n                        </Link>\n                        <button\n                            className=\"Orders__cancel\"\n                            onClick={() => {\n                                setFinishedOrder({itemId: order.shopId})\n                            }}\n                        >\n                            Отм.\n                        </button>\n                    </li>\n                ))}\n            </ul>\n            <ul className=\"Orders__finished-orders\">\n                {finishedOrders.map(order => (\n                    <li\n                        className=\"Orders__finished-order\"\n                        key={order.link}\n                    >\n                        <div className=\"Orders__left\">\n                            <h3 className=\"Orders__header Orders__dark\">{order.placeName}</h3>\n                            <p className=\"Orders__shop-name Orders__pink\">{order.shopName}</p>\n                            <p className=\"Orders__price Orders__pink\">Сумма {order.price} - Оплачено</p>\n                        </div>\n                        <button\n                            className=\"Orders__repeat\"\n                            onClick={() => {\n                                setActiveOrder({itemId: order.shopId})\n                            }}\n                        >\n                            <img\n                                className=\"Orders__refresh\"\n                                alt=\"repeat order\"\n                                src={refresh}\n                            />\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nOrders.defaultProps = {\n    setFinishedOrder: () => {\n    },\n    setActiveOrder: () => {\n    },\n}\n\nexport default Orders\n","import React, {useState} from 'react'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\nimport Home from './panels/Home'\nimport Place from './panels/Place'\nimport Basket from './panels/Basket'\nimport Order from './panels/Order'\nimport Orders from './panels/Orders'\n\nimport './panels/App.css'\nimport kfc from './img/kfc.png'\nimport burger from './img/burger.png'\nimport mcdac from './img/mcdac.png'\nimport sub from './img/sub.png'\nimport OneTowar from './img/1.png'\nimport TwoTowar from './img/2.png'\nimport ThreeTowar from './img/3.png'\nimport FourTowar from './img/4.png'\n\n\nconst FOOD_AREAS = [{\n    id: 'pizikiva-gallery',\n    name: 'ТРЦ \"Им.Пыжикова\"',\n    items: [{\n        id: 'kfc',\n        name: 'KFC',\n        link: '/place/pizikiva-gallery/kfc',\n        description: 'Сеть ресторанов быстрого питания',\n        image: kfc,\n        foods: [{\n            id: 'classic',\n            image: FourTowar,\n            name: 'Классик',\n            price: 150,\n        }, {\n            id: 'free',\n            image: OneTowar,\n            name: 'Картофель фри',\n            price: 50,\n        }],\n    }, {\n        id: 'burger-king',\n        name: 'Burger King',\n        link: '/place/pizikiva-gallery/burger-king',\n        description: 'Сеть ресторанов быстрого питания',\n        image: burger,\n        foods: [{\n            id: 'OneTowar',\n            name: 'Товар № 1',\n            composition: 'Состав: по ГОСТу',\n            price: 630,\n            image: OneTowar,\n        }, {\n            id: 'TwoTowar',\n            name: 'Товар № 2',\n            composition: 'Состав: по ГОСТу',\n            price: 450,\n            image: TwoTowar,\n        }, {\n            id: 'ThreeTowar',\n            name: 'Товар № 3',\n            composition: 'Состав: по ГОСТу',\n            price: 800,\n            image: ThreeTowar,\n        }, {\n            id: 'FourthTowar',\n            name: 'Товар № 4',\n            composition: 'Состав по ГОСТу',\n            price: 600,\n            image: FourTowar,\n        }],\n    }, {\n        id: 'macdac',\n        name: 'McDonal\\'s',\n        link: '/place/pizikiva-gallery/macdac',\n        description: 'Сеть ресторанов быстрого питания',\n        image: mcdac,\n        foods: [{\n            id: 'hamburger',\n            image: TwoTowar,\n            name: 'Гамбургер',\n            price: 50,\n        }, {\n            id: 'bigmac',\n            image: ThreeTowar,\n            name: 'Биг мак',\n            price: 200,\n        }],\n    }, {\n        id: 'subway',\n        name: 'SubWay',\n        link: '/place/pizikiva-gallery/subway',\n        image: sub,\n        description: 'Сеть ресторанов быстрого питания',\n        foods: [{\n            id: 'melt-sub',\n            image: ThreeTowar,\n            name: 'Сабвей мелт',\n            price: 300,\n        }, {\n            id: 'day-sub',\n            image: OneTowar,\n            name: 'Саб дня',\n            price: 200,\n        }],\n    }],\n}]\n\nconst placesMap = FOOD_AREAS.reduce((result, area) => {\n    area.items.forEach(item => {\n        result[item.link] = item\n    })\n\n    return result\n}, {})\n\nconst foodsMap = FOOD_AREAS.reduce((result, area) => {\n    area.items.forEach(item => {\n        item.foods.forEach(food => {\n            result[food.id] = food\n        })\n    })\n\n    return result\n}, {})\n\nconst App = () => {\n    const [orderStatuses, setOrderStatuses] = useState(JSON.parse((localStorage.getItem('orderStatuses') || 'null')) || {})\n    const [order, setOrder] = useState(JSON.parse((localStorage.getItem('orders') || 'null')) || {})\n\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\" exact>\n                    <Home foodAreas={FOOD_AREAS} order={order}/>\n                </Route>\n                <Route path=\"/order/:areaId/:itemId\" exact>\n                    <Order\n                        foodAreas={FOOD_AREAS}\n                        order={order}\n                        setActiveOrder={({itemId}) => {\n                            const nextStatuses = {...orderStatuses}\n\n                            nextStatuses[itemId] = 'ACTIVE'\n\n                            setOrderStatuses(nextStatuses)\n                            localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses))\n                        }}\n                    />\n                </Route>\n                <Route path=\"/basket/:areaId/:itemId\" exact>\n                    <Basket\n                        foodAreas={FOOD_AREAS}\n                        order={order}\n                    />\n                </Route>\n                <Route\n                    path=\"/orders\"\n                    exact\n                >\n                    <Orders\n                        order={order}\n                        orderStatuses={orderStatuses}\n                        foodAreas={FOOD_AREAS}\n                        setFinishedOrder={({itemId}) => {\n                            const nextStatuses = {...orderStatuses}\n\n                            nextStatuses[itemId] = 'CANCELED'\n\n                            setOrderStatuses(nextStatuses)\n                            localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses))\n                        }}\n                        setActiveOrder={({itemId}) => {\n                            const nextStatuses = {...orderStatuses}\n\n                            nextStatuses[itemId] = 'ACTIVE'\n\n                            setOrderStatuses(nextStatuses)\n                            localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses))\n                        }}\n                    />\n                </Route>\n                <Route\n                    path=\"/place/:area/:place\"\n                    render={routeProps => {\n                        return (\n                            <Place\n                                {...routeProps}\n                                item={placesMap[routeProps.location.pathname]}\n                                area={FOOD_AREAS[0]}\n                                order={order}\n                                onIncrementPosition={({id, itemId, areaId}) => {\n                                    const updatedOrder = {...order}\n                                    console.log(updatedOrder)\n                                    if (id in updatedOrder) {\n                                        updatedOrder[id].count++\n                                    } else {\n                                        updatedOrder[id] = {\n                                            item: foodsMap[id],\n                                            count: 1,\n                                        }\n                                    }\n\n                                    let nextOrderStatuses = {...orderStatuses}\n\n                                    if (Object.keys(nextOrderStatuses).length === 0) {\n                                        FOOD_AREAS.forEach(area => {\n                                            area.items.forEach(item => {\n                                                item.foods.forEach(food => {\n                                                    if (food.id in order) {\n                                                        const status = item.id === itemId ? 'ACTIVE' : 'DONE'\n\n                                                        nextOrderStatuses[item.id] = status\n                                                    }\n                                                })\n                                            })\n                                        })\n                                    }\n\n                                    const serialized = JSON.stringify(updatedOrder)\n\n                                    localStorage.setItem('orders', serialized)\n                                    localStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses))\n\n                                    setOrder(updatedOrder)\n                                    setOrderStatuses(nextOrderStatuses)\n                                }}\n                                onDecrementPosition={({id, itemId, areaId}) => {\n                                    const updatedOrder = {...order}\n\n                                    if (id in updatedOrder) {\n                                        if (updatedOrder[id].count === 1) {\n                                            delete updatedOrder[id]\n                                        } else {\n                                            updatedOrder[id].count--\n                                        }\n                                    }\n\n                                    let nextOrderStatuses = {...orderStatuses}\n\n                                    if (Object.keys(nextOrderStatuses).length === 0) {\n                                        FOOD_AREAS.forEach(area => {\n                                            area.items.forEach(item => {\n                                                item.foods.forEach(food => {\n                                                    if (food.id in order) {\n                                                        const status = item.id === itemId ? 'ACTIVE' : 'DONE'\n\n                                                        nextOrderStatuses[item.id] = status\n                                                    }\n                                                })\n                                            })\n                                        })\n                                    }\n\n                                    const serialized = JSON.stringify(updatedOrder)\n\n                                    localStorage.setItem('orders', serialized)\n                                    localStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses))\n\n                                    setOrder(updatedOrder)\n                                    setOrderStatuses(nextOrderStatuses)\n                                }}\n                            />\n                        )\n                    }}\n                />\n            </Switch>\n        </Router>\n    )\n}\n\nexport default App\n","import 'core-js/features/map'\nimport 'core-js/features/set'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport connect from '@vkontakte/vk-connect'\nimport App from './App'\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit')\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App/>, document.getElementById('root'))\n","module.exports = __webpack_public_path__ + \"static/media/edit.a352f469.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.dfc54362.png\";","module.exports = __webpack_public_path__ + \"static/media/3.dbf82c38.png\";","module.exports = __webpack_public_path__ + \"static/media/2.20489759.png\";","module.exports = __webpack_public_path__ + \"static/media/4.e671d539.png\";","module.exports = __webpack_public_path__ + \"static/media/check-symbol.d9b1d2c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/refresh-button.c4cb1667.svg\";","module.exports = __webpack_public_path__ + \"static/media/kfc.4fd2ba47.png\";","module.exports = __webpack_public_path__ + \"static/media/burger.35bcd067.png\";","module.exports = __webpack_public_path__ + \"static/media/mcdac.60464810.png\";","module.exports = __webpack_public_path__ + \"static/media/sub.4eb05fdd.png\";"],"sourceRoot":""}